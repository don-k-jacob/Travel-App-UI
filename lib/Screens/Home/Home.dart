import 'package:flutter/material.dart';import 'package:travelappui/Screens/Home/pages/Notification.dart';import 'package:travelappui/Screens/Home/pages/Profile.dart';import 'package:travelappui/Screens/Home/pages/Search.dart';import 'package:travelappui/Screens/Home/pages/home.dart';class Home extends StatefulWidget {  @override  _HomeState createState() => _HomeState();}class _HomeState extends State<Home> {  int _selectedIndex = 0;  void _onItemTapped(int index) {    setState(() {      _selectedIndex = index;    });  }  @override  Widget build(BuildContext context) {    return Scaffold(      bottomNavigationBar: Container(        decoration: BoxDecoration(          color: Color(0xff191A1D),          boxShadow: [            BoxShadow(              color: Colors.black,              blurRadius:              10.0,              // has the effect of softening the shadow              offset: Offset(                7.0, // horizontal, move right 10                7.0, // vertical, move down 10              ),            ),            BoxShadow(              color: Color(0xff292A2F),              blurRadius:              10.0,              // has the effect of softening the shadow              offset: Offset(                -5.0, // horizontal, move right 10                -5.0, // vertical, move down 10              ),            ),          ],),        height: 100,        width: (MediaQuery.of(context).size.width),        child: Row(          mainAxisAlignment: MainAxisAlignment.spaceEvenly,          children: <Widget>[            ButtonIcon(              selectedIndex: _selectedIndex,              index: 0,              iconData: Icons.home,              onTap: () {                _onItemTapped(0);              },            ),            ButtonIcon(              selectedIndex: _selectedIndex,              index: 1,              iconData: Icons.search,              onTap: () {                _onItemTapped(1);              },            ),            ButtonIcon(              selectedIndex: _selectedIndex,              index: 2,              iconData: Icons.notifications,              onTap: () {                _onItemTapped(2);              },            ),            ButtonIcon(              selectedIndex: _selectedIndex,              index: 3,              iconData: Icons.person,              onTap: () {                _onItemTapped(3);              },            ),          ],        ),      ),      body: page[_selectedIndex]    );  }}List<Widget> page=[  home(),  Search(),  Alert(),  Profile(),];class ButtonIcon extends StatelessWidget {  const ButtonIcon(      {@required int selectedIndex,      @required this.iconData,      @required this.index,      @required this.onTap})      : _selectedIndex = selectedIndex;  final int _selectedIndex;  final IconData iconData;  final int index;  final onTap;  @override  Widget build(BuildContext context) {    return GestureDetector(      onTap: onTap,      child: Container(      decoration: BoxDecoration(        boxShadow: [          BoxShadow(            color: (_selectedIndex == index)                ? Colors.black                : Color(0xff191A1d),            blurRadius: 10.0, // has the effect of softening the shadow            spreadRadius: 5.0, // has the effect of extending the shadow            offset: Offset(              7.0, // horizontal, move right 10              7.0, // vertical, move down 10            ),          )        ],      ),      child: Container(        height: 55,        width: 55,        color: Color(0xff191A1d),        child: Center(          child: (_selectedIndex == index)              ? RadiantGradientMask(                  child: Icon(                  iconData,                  size: 40,                ))              : Icon(iconData, size: 40, color: Color(0xffBDBDBD)),        ),      )),    );  }}class RadiantGradientMask extends StatelessWidget {  RadiantGradientMask({this.child});  final Widget child;  @override  Widget build(BuildContext context) {    return ShaderMask(      shaderCallback: (bounds) => LinearGradient(        begin: Alignment.topRight,        end: Alignment.bottomLeft,        colors: [          Color(0xffFF61DC),          Color(0xffFF6161),        ],        tileMode: TileMode.mirror,      ).createShader(bounds),      child: child,    );  }}